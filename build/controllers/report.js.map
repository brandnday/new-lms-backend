{"version":3,"sources":["../../src/controllers/report.js"],"names":["isActive","birthday","ctx","request","body","churchId","monthId","queryParam","mainQuery","pgPool","query","res","ok","response","rows","lateThisTerm","termId","name","attendancePointThisTerm","perService","serviceId","date","monthlyPerChild","monthlyPerService","yearlyPerService","year"],"mappings":"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","file":"report.js","sourcesContent":["import { pgPool } from \"../services/database\";\n\nconst isActive = `status = 'A'`;\nexport const birthday = async ctx => {\n  const { churchId, monthId } = ctx.request.body;\n  const queryParam = [churchId, monthId + 1];\n  const mainQuery =\n    monthId === 12\n      ? `from mschildren \n  where registered_at = $1\n  and EXTRACT(MONTH FROM birthdate)<=$2\n  and status='A'`\n      : `from mschildren \n  where registered_at = $1\n  and EXTRACT(MONTH FROM birthdate)=$2\n  and status='A'`;\n  const res = await pgPool.query(\n    `select id, name,birthdate  ${mainQuery}\n   `,\n    queryParam\n  );\n\n  ctx.ok({ response: { rows: res.rows } });\n};\n\nexport const lateThisTerm = async ctx => {\n  const { churchId, termId, name } = ctx.request.body;\n  const queryParam = [termId, churchId, `%${name}%`];\n  const mainQuery = ` from trattendance a\n  join mschildren c on a.childrenid = c.id\n    where attendancestatus = 'L'\n  and termid = $1\n  and churchid= $2\n  and a.status='A'\n  and name like $3\n  group by c.id,name`;\n  const res = await pgPool.query(\n    `select c.id, name, count(date)*2 as points  ${mainQuery}\n   `,\n    queryParam\n  );\n\n  ctx.ok({ response: { rows: res.rows } });\n};\n\nexport const attendancePointThisTerm = async ctx => {\n  const { churchId, termId } = ctx.request.body;\n  const queryParam = [termId, churchId, `%${name}%`];\n  const mainQuery = ` from trattendance a\n  join mschildren c on a.childrenid = c.id\n    where attendancestatus = 'G'\n  and termid = $1\n  and churchid= $2\n  and name like $3\n  and a.status='A'\n  group by c.id,name`;\n  const res = await pgPool.query(\n    `select c.id, name, count(date)*4 as points  ${mainQuery}\n   `,\n    queryParam\n  );\n\n  ctx.ok({ response: { rows: res.rows } });\n};\n\nexport const perService = async ctx => {\n  const { churchId, serviceId, date } = ctx.request.body;\n  const queryParam = [churchId, serviceId, date];\n  const mainQuery = `from trattendance a\n  join mschildren c on a.childrenid = c.id\n    where a.status='A'\n    and churchid= #1\n  and serviceid =$2\n  and date like $3`;\n  const res = await pgPool.query(\n    `select c.id, name,date, attendancestatus  ${mainQuery}\n   `,\n    queryParam\n  );\n  ctx.ok({ response: { rows: res.rows } });\n};\n\nexport const monthlyPerChild = async ctx => {\n  const { churchId, date } = ctx.request.body;\n  const queryParam = [churchId, `'${date}-%`];\n  const mainQuery = `from trattendance a\n  join mschildren c on a.childrenid = c.id\n    where a.status='A'\n  and churchid= $1\n  and date like $2\n  group by c.id,name`;\n  const res = await pgPool.query(\n    `select c.id, name, count(date) as totalAttendance   ${mainQuery}\n   `,\n    queryParam\n  );\n  ctx.ok({ response: { rows: res.rows } });\n};\n\nexport const monthlyPerService = async ctx => {\n  const { churchId, date } = ctx.request.body;\n  const queryParam = [churchId, `'${date}-%`];\n  const mainQuery = `from trattendance a\n  join trservices s on a.serviceid=s.id\n    where a.status='A'\n  and a.churchid= $1\n  and s.churchid= $1\n  and date like $2\n  group by date, serviceid,servicename\n  order by date, servicename`;\n  const res = await pgPool.query(\n    `select date, serviceid,servicename, count(a.id) as totalAttendance  ${mainQuery}\n   `,\n    queryParam\n  );\n  ctx.ok({ response: { rows: res.rows } });\n};\n\nexport const yearlyPerService = async ctx => {\n  const { churchId, year } = ctx.request.body;\n  const queryParam = [churchId, `'${year}-%`];\n  const mainQuery = `\nfrom trattendance a\n  join trservices s on a.serviceid=s.id\n    where a.status='A'\n  and a.churchid= $1\n  and s.churchid= $1\n  and date like $2\n  group by date, serviceid,servicename\n  order by date, servicename`;\n  const res = await pgPool.query(\n    `select date, serviceid,servicename, count(a.id) as totalAttendance  ${mainQuery}\n   `,\n    queryParam\n  );\n  ctx.ok({ response: { rows: res.rows } });\n};\n"]}