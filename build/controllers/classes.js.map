{"version":3,"sources":["../../src/controllers/classes.js"],"names":["pgPool","isActive","getClassList","ctx","gradeId","specializationId","termId","schoolId","request","body","requestData","id","classCode","className","specialization","gradeCode","grade","bannerSrc","memberCount","startDate","endDate","getClassDetail","classId","ok","response","getClassStudentList","name","nis","username","email","insertClass","status","updateClass","deleteClass","getGradeList","classCount","insertGrade","updateGrade","deleteGrade","getSpecializationList","specializationCode","initial","insertSpecialization","updateSpecialization","deleteSpecialization","getPeriodList","periodCode","period","effectiveDate","insertPeriod","deletePeriod","periodId"],"mappings":"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","file":"classes.js","sourcesContent":["import { pgPool } from \"../services/database\";\nconst isActive = `status = 'A'`;\n// export const list = async (ctx) => {\n//   const { churchid } = ctx.request.body.requestData;\n//   const mainQuery = `from trservices\n//   where churchid = $1\n//   AND ${isActive}`;\n//   const res = await pgPool.query(\n//     `select id,servicename,starttime,endtime,latetime ${mainQuery}\n//     ORDER BY id`,\n//     [churchid]\n//   );\n//   ctx.ok({ response:{ { rows: res.rows } });\n// };\n\n// export const add = async (ctx) => {\n//   const {\n//     servicename,\n//     starttime,\n//     latetime,\n//     endtime,\n//     churchid,\n//   } = ctx.request.body.requestData;\n//   const res = await pgPool.query(\n//     `INSERT INTO trservices(servicename,starttime,endtime,latetime,churchid,status)\n//   values($1,$2,$3,$4,$5,'A')`,\n//     [servicename, starttime, endtime, latetime, churchid]\n//   );\n//   ctx.ok({ response:{ res.rows });\n// };\n\n// export const update = async (ctx) => {\n//   const {\n//     servicename,\n//     starttime,\n//     latetime,\n//     endtime,\n//     editingId,\n//   } = ctx.request.body.requestData;\n//   const res = await pgPool.query(\n//     `UPDATE trservices SET\n//   servicename = $1,\n//   starttime = $2,\n//   latetime = $3,\n//   endtime = $4\n//   where id = $5`,\n//     [servicename, starttime, latetime, endtime, editingId]\n//   );\n//   ctx.ok({ response:{ res.rows });\n// };\n\n// export const deactivate = async (ctx) => {\n//   const { editingId } = ctx.request.body.requestData;\n//   const res = await pgPool.query(\n//     `update trservices set status='D'\n//   where id=$1`,\n//     [editingId]\n//   );\n//   ctx.ok({ response:{ res.rows });\n// };\n\nexport const getClassList = async (ctx) => {\n  // may want to add pagination for this\n  const {\n    gradeId,\n    specializationId,\n    termId,\n    schoolId,\n  } = ctx.request.body.requestData;\n\n  return [\n    {\n      id: 8,\n      classCode: \"01011\",\n      termId: \"122131\",\n      className: \"XII1\",\n      specialization: \"IPA\",\n      gradeCode: \"10\",\n      grade: \"10\",\n      bannerSrc: \"\",\n      memberCount: 36,\n      startDate: \"2020-04-04\",\n      endDate: \"2020-10-04\",\n    },\n    {\n      id: 8,\n      classCode: \"01011\",\n      termId: \"122131\",\n      className: \"XII1\",\n      specialization: \"IPA\",\n      gradeCode: \"10\",\n      grade: \"10\",\n      bannerSrc: \"\",\n      memberCount: 36,\n      startDate: \"2020-04-04\",\n      endDate: \"2020-10-04\",\n    },\n  ];\n};\n\nexport const getClassDetail = () => {\n  const { classId } = ctx.request.body.requestData;\n  ctx.ok({\n    response: {\n      id: 8,\n      classCode: \"01011\",\n      termId: \"122131\",\n      className: \"XII1\",\n      specialization: \"IPA\",\n      gradeCode: \"10\",\n      grade: \"10\",\n      bannerSrc: \"\",\n      memberCount: 36,\n      startDate: \"2020-04-04\",\n      endDate: \"2020-10-04\",\n    },\n  });\n};\n\nexport const getClassStudentList = async (ctx) => {\n  // may want to add pagination for this\n  const {\n    gradeId,\n    specializationId,\n    termId,\n    schoolId,\n  } = ctx.request.body.requestData;\n\n  return [\n    {\n      id: 0,\n      name: \"student 1\",\n      nis: \"1234\",\n      username: \"username1\",\n      email: \"email@em.ail\",\n    },\n    {\n      id: 0,\n      name: \"student 1\",\n      nis: \"1234\",\n      username: \"username1\",\n      email: \"email@em.ail\",\n    },\n    {\n      id: 0,\n      name: \"student 1\",\n      nis: \"1234\",\n      username: \"username1\",\n      email: \"email@em.ail\",\n    },\n  ];\n};\n\nexport const insertClass = async (ctx) => {\n  const {\n    classCode,\n    termId,\n    className,\n    specialization,\n    gradeCode,\n    grade,\n    bannerSrc,\n    memberCount,\n    startDate,\n    endDate,\n  } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n\nexport const updateClass = async (ctx) => {\n  const {\n    classId,\n    classCode,\n    termId,\n    className,\n    specialization,\n    gradeCode,\n    grade,\n    bannerSrc,\n    memberCount,\n    startDate,\n    endDate,\n  } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n\nexport const deleteClass = async (ctx) => {\n  const { classId } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n\nexport const getGradeList = async (ctx) => {\n  const {\n    gradeId,\n    specializationId,\n    termId,\n    schoolId,\n  } = ctx.request.body.requestData;\n\n  return [\n    {\n      id: 8,\n      gradeCode: \"10\",\n      grade: \"10\",\n      classCount: 10,\n    },\n    {\n      id: 8,\n      gradeCode: \"11\",\n      grade: \"11\",\n      classCount: 11,\n    },\n    {\n      id: 8,\n      gradeCode: \"12\",\n      grade: \"12\",\n      classCount: 12,\n    },\n  ];\n};\n\nexport const insertGrade = async (ctx) => {\n  const { gradeCode, grade } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n\nexport const updateGrade = async (ctx) => {\n  const { gradeId, gradeCode, grade } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n\nexport const deleteGrade = async (ctx) => {\n  const { gradeId } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n\nexport const getSpecializationList = async (ctx) => {\n  const {} = ctx.request.body.requestData;\n\n  return [\n    {\n      id: 8,\n      specializationCode: \"80\",\n      specialization: \"IPA\",\n      initial: \"IPA\",\n      classCount: 10,\n    },\n    {\n      id: 2,\n      specializationCode: \"80\",\n      specialization: \"IPS\",\n      initial: \"IPS\",\n      classCount: 10,\n    },\n  ];\n};\n\nexport const insertSpecialization = async (ctx) => {\n  const {\n    specializationCode,\n    specialization,\n    initial,\n  } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n\nexport const updateSpecialization = async (ctx) => {\n  const {\n    specializationId,\n    specializationCode,\n    specialization,\n    initial,\n  } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n\nexport const deleteSpecialization = async (ctx) => {\n  const { specializationId } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n\n\nexport const getPeriodList = async (ctx) => {\n  const {} = ctx.request.body.requestData;\n\n  return [\n    {\n      id: 8,\n      periodCode: \"2020\",\n      period: \"2020/2021\",\n      effectiveDate: \"2020 - 2021\",\n    },\n  ];\n};\n\nexport const insertPeriod = async (ctx) => {\n  const { periodCode, period, effectiveDate } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n\nexport const deletePeriod = async (ctx) => {\n  const { periodId } = ctx.request.body.requestData;\n\n  ctx.ok({\n    response: {\n      status: \"success\",\n    },\n  });\n};\n"]}