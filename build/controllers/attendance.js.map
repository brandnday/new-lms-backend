{"version":3,"sources":["../../src/controllers/attendance.js"],"names":["isActive","list","ctx","request","body","churchId","date","serviceId","termId","pagination","name","attendanceType","queryParam","mainQuery","pgPool","query","page","size","res","resCount","ok","response","rows","totalData","count","add","requestData","childrenId","attendedList","deactivate","editingId"],"mappings":"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","file":"attendance.js","sourcesContent":["import { pgPool } from \"../services/database\";\n\nconst isActive = `status = 'A'`;\nexport const list = async ctx => {\n  const {\n    churchId,\n    date,\n    serviceId,\n    termId,\n    pagination,\n    name,\n    attendanceType\n  } = ctx.request.body;\n  const queryParam = [churchId, date, serviceId, termId, `%${name}%`];\n  const mainQuery = `from mschildren \n  where id not in\n  (select childrenid from trattendance\n  where churchId = $1\n  and date=$2\n  and serviceId = $3\n  and termId = $4\n  and status='A') \n  and name like $5`;\n  const res = await pgPool.query(\n    `select id, name,birthdate  ${mainQuery}\n    ORDER BY id\n    OFFSET ${(pagination.page - 1) * pagination.size} LIMIT ${pagination.size}`,\n    queryParam\n  );\n\n  const resCount = await pgPool.query(\n    `select count(*) ${mainQuery}`,\n    queryParam\n  );\n  ctx.ok({ response: { rows: res.rows, totalData: resCount.rows[0].count } });\n};\n\n\n\nexport const add = async ctx => {\n  const { churchId,childrenId,date,serviceId,termId } = ctx.request.body.requestData;\n  const res = await pgPool.query(\n    `insert into \n    trattendance(churchid,childrenid,date,serviceid,termid,time,status,attendancestatus) \n  values($1,$2,$3,$4,$5,'11:00','A','G')`,\n    [churchId,childrenId,date,serviceId,termId]\n  );\n  ctx.ok({ response: res.rows });\n};\n\nexport const attendedList = async ctx => {\n  const { churchId, date, serviceId, termId,pagination } = ctx.request.body;\n  const queryParam = [churchId, date, serviceId, termId];\n  const mainQuery = `from trattendance a\n  join mschildren c on a.childrenid = c.id\n  where churchId = $1\n  and date=$2\n  and serviceId = $3\n  and termId = $4\n  and a.status='A'\n  `;\n\n  const res = await pgPool.query(\n    `select a.id,name, birthdate, time,attendancestatus ${mainQuery}\n    ORDER BY a.id\n    OFFSET ${(pagination.page - 1) * pagination.size} LIMIT ${pagination.size}`,\n    queryParam\n  );\n\n  const resCount = await pgPool.query(\n    `select count(*) ${mainQuery}`,\n    queryParam\n  );\n  ctx.ok({ response: { rows: res.rows, totalData: resCount.rows[0].count } });\n};\n\n\n\nexport const deactivate = async ctx => {\n  const { editingId } = ctx.request.body.requestData;\n  const res = await pgPool.query(\n    `update trattendance set status='D'\n  where id=$1`,\n    [editingId]\n  );\n  ctx.ok({ response: res.rows });\n};"]}