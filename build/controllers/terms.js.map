{"version":3,"sources":["../../src/controllers/terms.js"],"names":["isActive","list","ctx","churchid","request","body","requestData","mainQuery","pgPool","query","res","ok","response","rows","add","startdate","enddate","termname","format","update","editingId","deactivate"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AACA,IAAMA,2BAAN;AACO,IAAMC;AAAA,qEAAO,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,oBADW,GACCD,IAAIE,OAAJ,CAAYC,IAAZ,CAAiBC,WADlB,CACXH,QADW;AAEZI,qBAFY,oDAIZP,QAJY;AAAA;AAAA,mBAKAQ,iBAAOC,KAAP,2CACwBF,SADxB,wBAEH,CAACJ,QAAD,CAFG,CALA;;AAAA;AAKZO,eALY;;AAQlBR,gBAAIS,EAAJ,CAAO,EAAEC,UAAU,EAAEC,MAAMH,IAAIG,IAAZ,EAAZ,EAAP;;AARkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAWA,IAAMC;AAAA,sEAAM,kBAAMZ,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oCACoBA,IAAIE,OAAJ,CAAYC,IAAZ,CAAiBC,WADrC,EACVS,SADU,yBACVA,SADU,EACAC,OADA,yBACAA,OADA,EACQb,QADR,yBACQA,QADR;AAEXc,oBAFW,GAEE,sBAAOF,SAAP,EAAkBG,MAAlB,CAAyB,MAAzB,CAFF,SAEsC,sBAAOF,OAAP,EAAgBE,MAAhB,CAAuB,MAAvB,CAFtC;AAAA;AAAA,mBAGCV,iBAAOC,KAAP,iGAGhB,CAACQ,QAAD,EAAUF,SAAV,EAAoBC,OAApB,EAA4Bb,QAA5B,CAHgB,CAHD;;AAAA;AAGXO,eAHW;;AAQjBR,gBAAIS,EAAJ,CAAO,EAAEC,UAAUF,IAAIG,IAAhB,EAAP;;AARiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAWA,IAAMM;AAAA,sEAAS,kBAAMjB,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qCACkBA,IAAIE,OAAJ,CAAYC,IAAZ,CAAiBC,WADnC,EACbS,SADa,0BACbA,SADa,EACHC,OADG,0BACHA,OADG,EACKI,SADL,0BACKA,SADL;AAEdH,oBAFc,GAED,sBAAOF,SAAP,EAAkBG,MAAlB,CAAyB,MAAzB,CAFC,SAEmC,sBAAOF,OAAP,EAAgBE,MAAhB,CAAuB,MAAvB,CAFnC;AAAA;AAAA,mBAGJV,iBAAOC,KAAP,6FAMhB,CAACQ,QAAD,EAAUF,SAAV,EAAoBC,OAApB,EAA4BI,SAA5B,CANgB,CAHI;;AAAA;AAGhBV,eAHgB;;AAWpBR,gBAAIS,EAAJ,CAAO,EAAEC,UAAUF,IAAIG,IAAhB,EAAP;;AAXoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAT;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAcA,IAAMQ;AAAA,sEAAa,kBAAMnB,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBkB,qBADgB,GACFlB,IAAIE,OAAJ,CAAYC,IAAZ,CAAiBC,WADf,CAChBc,SADgB;AAAA;AAAA,mBAENZ,iBAAOC,KAAP,mDAGhB,CAACW,SAAD,CAHgB,CAFM;;AAAA;AAElBV,eAFkB;;AAOxBR,gBAAIS,EAAJ,CAAO,EAAEC,UAAUF,IAAIG,IAAhB,EAAP;;AAPwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"terms.js","sourcesContent":["import { pgPool } from \"../services/database\";\nimport moment from 'moment';\nconst isActive = `status = 'A'`;\nexport const list = async ctx => {\n  const {churchid} = ctx.request.body.requestData;\n  const mainQuery = `from trterms \n  where churchid = $1\n  AND ${isActive}`;\n  const res = await pgPool.query(\n    `select id,termname,startdate,enddate ${mainQuery}\n    ORDER BY id`,[churchid]);\n  ctx.ok({ response: { rows: res.rows} });\n};\n\nexport const add = async ctx => {\n  const {startdate,enddate,churchid} = ctx.request.body.requestData;\n  const termname= `${moment(startdate).format('YYYY')}/${moment(enddate).format('YYYY')}`\n  const res = await pgPool.query(\n    `INSERT INTO trterms(termname,startdate,enddate,churchid,status)\n  values($1,$2,$3,$4,'A')`,\n    [termname,startdate,enddate,churchid]\n  );\n  ctx.ok({ response: res.rows });\n};\n\nexport const update = async ctx => {\n  const {startdate,enddate,editingId} = ctx.request.body.requestData;\n  const termname= `${moment(startdate).format('YYYY')}/${moment(enddate).format('YYYY')}`\nconst res = await pgPool.query(\n  `UPDATE trterms SET\n  termname = $1,\n  startdate = $2,\n  enddate = $3\n  where id = $4`,\n  [termname,startdate,enddate,editingId]\n);\n  ctx.ok({ response: res.rows });\n};\n\nexport const deactivate = async ctx => {\n  const { editingId } = ctx.request.body.requestData;\n  const res = await pgPool.query(\n    `update trterms set status='D'\n  where id=$1`,\n    [editingId]\n  );\n  ctx.ok({ response: res.rows });\n};\n"]}